{"version":3,"sources":["scripts/app-d3a8c63122.js"],"names":["angular","module","githubContributor","$log","$http","getContributors","limit","getContributorsComplete","response","data","getContributorsFailed","error","toJson","get","apiHost","then","service","$inject","factory","webDevTec","getTec","title","url","description","logo","this","preferencePanel","mySharedService","PreferencePanelController","moment","$scope","vm","hidden","incidentsCount","casualtiesCount","toggleIcon","dateMaxLimit","enddateMaxLimit","modeId","viewModes","id","name","$on","accIncidents","accCasualties","log","$watch","isYearModeEnabled","isMonthModeEnabled","isRangeModeEnabled","isDateModeEnabled","init","sendRenderYearRequest","changeMarkerStatus","status","sendMarkerStatusUpdateRequest","changeShapeStatus","sendShapeStatusUpdateRequest","changeHeatmapStatus","sendHeatmapStatusUpdateRequest","updateEDMaxLimit","result","Date","selectedstartdate","setDate","getDate","toString","placeChanged","place","getPlace","sendRecenterRequest","geometry","location","applyRender","sendToggleLoadScreenRequest","yearRender","monthRender","rangeRender","dateRender","undefined","selectedyear","invalidYearMessage","selectedmonth","invalidMonthMessage","sendRenderMonthRequest","selectedenddate","invalidSDMessage","invalidEDMessage","sendRenderRangeRequest","selecteddate","invalidDateMessage","sendRenderDateRequest","collapse","element","css","directive","restrict","templateUrl","controller","controllerAs","bindToController","acmeNavbar","NavbarController","acmeMalarkey","malarkey","linkFunc","scope","el","attr","watcher","typist","typeSpeed","deleteSpeed","pauseDelay","loop","postfix","addClass","forEach","extraValues","value","type","pause","contributors","contributor","login","MalarkeyController","activate","info","template","link","googleMap","GMapController","heatmapData","$rootScope","sharedService","message","loading","markerDisplay","shapeDisplay","heatmapDisplay","requestURL","domain","$broadcast","sendPanelStateUpdateRequest","startRange","endRange","startDay","startMonth","getMonth","startYear","getFullYear","endDay","endMonth","endYear","date","day","month","year","isLeap","daysInMonth","MainController","NgMap","aeroData","heatMapLayer","aeroIncidentArray","firstRun","incidentsMark","loadingstatus","accumulatedIncidents","accumulatedCasualties","markerStatus","shapeStatus","getRadius","num","Math","pow","showDetail","e","incident","map","showInfoWindow","event_identifier","getIcon","isLoading","pendingRequests","length","v","panTo","setZoom","setMap","setData","resp","Promise","resolve","i","lat","lon","idx","eventid","approxLocation","event_date","substr","indexOf","population","approx_loc","position","push","google","maps","LatLng","weight","MVCArray","visualization","HeatmapLayer","radius","$apply","getMap","setOptions","minZoom","gradient","set","main","runBlock","debug","run","routeConfig","$routeProvider","when","otherwise","redirectTo","config","constant","$logProvider","toastrConfig","debugEnabled","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","$templateCache","put"],"mappings":"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","file":"scripts/app-d3a8c63122.js","sourcesContent":["(function() {\n  'use strict';\n  angular\n    .module('webapp', ['uiSwitch', 'ngAnimate', 'ngCookies', 'ngTouch', 'ngSanitize', 'ngMessages', 'ngAria', 'ngResource', 'ngRoute', 'toastr', 'ngMap', '720kb.datepicker']);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('webapp')\n    .factory('githubContributor', githubContributor);\n\n  /** @ngInject */\n  function githubContributor($log, $http) {\n    var apiHost = 'https://api.github.com/repos/Swiip/generator-gulp-angular';\n\n    var service = {\n      apiHost: apiHost,\n      getContributors: getContributors\n    };\n\n    return service;\n\n    function getContributors(limit) {\n      if (!limit) {\n        limit = 30;\n      }\n\n      return $http.get(apiHost + '/contributors?per_page=' + limit)\n        .then(getContributorsComplete)\n        .catch(getContributorsFailed);\n\n      function getContributorsComplete(response) {\n        return response.data;\n      }\n\n      function getContributorsFailed(error) {\n        $log.error('XHR Failed for getContributors.\\n' + angular.toJson(error.data, true));\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n      .module('webapp')\n      .service('webDevTec', webDevTec);\n\n  /** @ngInject */\n  function webDevTec() {\n    var data = [\n      {\n        'title': 'AngularJS',\n        'url': 'https://angularjs.org/',\n        'description': 'HTML enhanced for web apps!',\n        'logo': 'angular.png'\n      },\n      {\n        'title': 'BrowserSync',\n        'url': 'http://browsersync.io/',\n        'description': 'Time-saving synchronised browser testing.',\n        'logo': 'browsersync.png'\n      },\n      {\n        'title': 'GulpJS',\n        'url': 'http://gulpjs.com/',\n        'description': 'The streaming build system.',\n        'logo': 'gulp.png'\n      },\n      {\n        'title': 'Jasmine',\n        'url': 'http://jasmine.github.io/',\n        'description': 'Behavior-Driven JavaScript.',\n        'logo': 'jasmine.png'\n      },\n      {\n        'title': 'Karma',\n        'url': 'http://karma-runner.github.io/',\n        'description': 'Spectacular Test Runner for JavaScript.',\n        'logo': 'karma.png'\n      },\n      {\n        'title': 'Protractor',\n        'url': 'https://github.com/angular/protractor',\n        'description': 'End to end test framework for AngularJS applications built on top of WebDriverJS.',\n        'logo': 'protractor.png'\n      },\n      {\n        'title': 'Bootstrap',\n        'url': 'http://getbootstrap.com/',\n        'description': 'Bootstrap is the most popular HTML, CSS, and JS framework for developing responsive, mobile first projects on the web.',\n        'logo': 'bootstrap.png'\n      },\n      {\n        'title': 'Angular UI Bootstrap',\n        'url': 'http://angular-ui.github.io/bootstrap/',\n        'description': 'Bootstrap components written in pure AngularJS by the AngularUI Team.',\n        'logo': 'ui-bootstrap.png'\n      },\n      {\n        'title': 'Sass (Node)',\n        'url': 'https://github.com/sass/node-sass',\n        'description': 'Node.js binding to libsass, the C version of the popular stylesheet preprocessor, Sass.',\n        'logo': 'node-sass.png'\n      }\n    ];\n\n    this.getTec = getTec;\n\n    function getTec() {\n      return data;\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('webapp').directive('pref', preferencePanel);\n\n  /** @ngInject */\n  function preferencePanel(mySharedService) {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/preferencepanel/preferencepanel.html',\n      controller: PreferencePanelController,\n      controllerAs: 'vm',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function PreferencePanelController(moment, $scope, $log) {\n      var vm = this;\n      $scope.hidden = true;\n      vm.incidentsCount = null;\n      vm.casualtiesCount = null;\n      vm.toggleIcon = 'glyphicon-chevron-down';\n      vm.dateMaxLimit = 'December 31, 2015'; //to be refactored;\n      vm.enddateMaxLimit = 'December 31, 2015';\n      vm.modeId = 1;\n\n      vm.viewModes = [{\n        id: \"1\",\n        name: \"by Year\"\n      }, {\n        id: \"2\",\n        name: \"by Month\"\n      }, {\n        id: \"3\",\n        name: \"by Range\"\n      }, {\n        id: \"4\",\n        name: \"by Date\"\n      }];\n\n      /* event handler */\n      $scope.$on('updatePanelStat', function() {\n        vm.incidentsCount = mySharedService.accIncidents;\n        vm.casualtiesCount = mySharedService.accCasualties;\n        $log.log('successfully received request and updated pref pane');\n      });\n\n      $scope.$watch('vm.modeId', function() {\n        vm.isYearModeEnabled = vm.modeId == '1' ? true : false;\n        vm.isMonthModeEnabled = vm.modeId == '2' ? true : false;\n        vm.isRangeModeEnabled = vm.modeId == '3' ? true : false;\n        vm.isDateModeEnabled = vm.modeId == '4' ? true : false;\n      });\n\n      /* self defined functions */\n      vm.init = function() {\n        mySharedService.sendRenderYearRequest('2015');\n      };\n\n      vm.changeMarkerStatus = function(status) {\n        mySharedService.sendMarkerStatusUpdateRequest(status);\n      };\n\n      vm.changeShapeStatus = function(status) {\n        mySharedService.sendShapeStatusUpdateRequest(status);\n      };\n\n      vm.changeHeatmapStatus = function(status) {\n        mySharedService.sendHeatmapStatusUpdateRequest(status);\n      };\n\n      vm.updateEDMaxLimit = function() {\n        var result = new Date(vm.selectedstartdate);\n        result.setDate(result.getDate() + 90);\n        vm.enddateMaxLimit = result.toString();\n      };\n\n      vm.placeChanged = function() {\n        vm.place = this.getPlace();\n        mySharedService.sendRecenterRequest(vm.place.geometry.location);\n        $log.log('sending request');\n      };\n\n      vm.applyRender = function() {\n        mySharedService.sendToggleLoadScreenRequest();\n        if (vm.modeId == 1) {\n          vm.yearRender();\n        } else if (vm.modeId == 2) {\n          vm.monthRender();\n        } else if (vm.modeId == 3) {\n          vm.rangeRender();\n        } else if (vm.modeId == 4) {\n          vm.dateRender();\n        } else {\n          $log.log(\"Error\");\n        }\n      };\n\n      vm.yearRender = function() {\n        if (vm.selectedyear == undefined) { //error handling\n          vm.invalidYearMessage = 'Please enter a valid year.';\n        } else {\n          vm.invalidYearMessage = '';\n          mySharedService.sendRenderYearRequest(vm.selectedyear);\n        }\n      };\n\n      vm.monthRender = function() {\n        if (vm.selectedyear == undefined && vm.selectedmonth == undefined) { //error handling\n          vm.invalidYearMessage = 'Please enter a valid year.';\n          vm.invalidMonthMessage = 'Please enter a valid month.';\n        } else if (vm.selectedyear == undefined || vm.selectedmonth == undefined) {\n          if (vm.selectedyear == undefined) {\n            vm.invalidYearMessage = 'Please enter a valid year.';\n            vm.invalidMonthMessage = '';\n          } else { // if (vm.selectedmonth == undefined)\n            vm.invalidMonthMessage = 'Please enter a valid month.';\n            vm.invalidYearMessage = '';\n          }\n        } else {\n          vm.invalidYearMessage = '';\n          vm.invalidMonthMessage = '';\n          mySharedService.sendRenderMonthRequest(vm.selectedyear, vm.selectedmonth);\n        }\n      };\n\n      vm.rangeRender = function() {\n        if (vm.selectedstartdate == null && vm.selectedenddate == null) {\n          vm.invalidSDMessage = 'Date cannot be blank.';\n          vm.invalidEDMessage = 'Date cannot be blank.';\n        } else if (vm.selectedstartdate == null || vm.selectedenddate == null) {\n          if (vm.selectedstartdate == null) {\n            vm.invalidSDMessage = 'Date cannot be blank.';\n            vm.invalidEDMessage = '';\n          } else { // if (vm.selectedenddate == null)\n            vm.invalidEDMessage = 'Date cannot be blank.'\n            vm.invalidSDMessage = '';\n          }\n        } else {\n          vm.invalidSDMessage = '';\n          vm.invalidEDMessage = '';\n          mySharedService.sendRenderRangeRequest(new Date(vm.selectedstartdate), new Date(vm.selectedenddate));\n        }\n      };\n\n      vm.dateRender = function () {\n          if (vm.selecteddate == null) {\n            vm.invalidDateMessage = 'Date cannot be blank.';\n        } else {\n            vm.invalidDateMessage = '';\n            mySharedService.sendRenderDateRequest(new Date(vm.selecteddate));\n        }\n      }\n\n      /* to be refactored */\n      vm.collapse = function() {\n        if (!$scope.hidden) {\n          angular.element('#panel').css('top', '-1000px');\n          vm.toggleIcon = 'glyphicon-chevron-down';\n        } else {\n          angular.element('#panel').css('top', '0px');\n          vm.toggleIcon = 'glyphicon-chevron-up';\n        }\n        $scope.hidden = !$scope.hidden;\n      };\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('webapp')\n    .directive('navbar', acmeNavbar);\n\n  /** @ngInject */\n  function acmeNavbar() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/navbar/navbar.html',\n      controller: NavbarController,\n      controllerAs: 'vm',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function NavbarController() {\n\n\n      // \"vm.creation\" is avaible by directive option \"bindToController: true\"\n      // vm.relativeDate = moment(vm.creationDate).fromNow();\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('webapp')\n    .directive('acmeMalarkey', acmeMalarkey);\n\n  /** @ngInject */\n  function acmeMalarkey(malarkey) {\n    var directive = {\n      restrict: 'E',\n      scope: {\n        extraValues: '='\n      },\n      template: '&nbsp;',\n      link: linkFunc,\n      controller: MalarkeyController,\n      controllerAs: 'vm'\n    };\n\n    return directive;\n\n    function linkFunc(scope, el, attr, vm) {\n      var watcher;\n      var typist = malarkey(el[0], {\n        typeSpeed: 40,\n        deleteSpeed: 40,\n        pauseDelay: 800,\n        loop: true,\n        postfix: ' '\n      });\n\n      el.addClass('acme-malarkey');\n\n      angular.forEach(scope.extraValues, function(value) {\n        typist.type(value).pause().delete();\n      });\n\n      watcher = scope.$watch('vm.contributors', function() {\n        angular.forEach(vm.contributors, function(contributor) {\n          typist.type(contributor.login).pause().delete();\n        });\n      });\n\n      scope.$on('$destroy', function () {\n        watcher();\n      });\n    }\n\n    /** @ngInject */\n    function MalarkeyController($log, githubContributor) {\n      var vm = this;\n\n      vm.contributors = [];\n\n      activate();\n\n      function activate() {\n        return getContributors().then(function() {\n          $log.info('Activated Contributors View');\n        });\n      }\n\n      function getContributors() {\n        return githubContributor.getContributors(10).then(function(data) {\n          vm.contributors = data;\n\n          return vm.contributors;\n        });\n      }\n    }\n\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('webapp')\n    .directive('gmap', googleMap);\n\n  /** @ngInject */\n  function googleMap() {\n    var directive = {\n      restrict: 'E',\n      controller: GMapController,\n      controllerAs: 'vm',\n      bindToController: true,\n      heatmapData: null\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function GMapController() {\n\n    }\n\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('webapp').factory('mySharedService', function($rootScope) {\n    var sharedService = {};\n\n    sharedService.message = '';\n    sharedService.loading = false;\n\n    sharedService.accIncidents = null;\n    sharedService.accCasualties = null;\n\n    sharedService.markerDisplay = null;\n    sharedService.shapeDisplay = null;\n    sharedService.heatmapDisplay = null;\n\n    sharedService.requestURL = null;\n    sharedService.domain = 'http://localhost:5000'\n      //'http://localhost:5000/api/v2/ntsb/incidents/list/listrange?startyear=2015&startmonth=01&startday=01&endyear=2015&endmonth=12&endday=31';\n\n    sharedService.sendRecenterRequest = function(location) {\n      this.location = location;\n      $rootScope.$broadcast('recenter');\n    };\n\n    sharedService.sendPanelStateUpdateRequest = function(accIncidents, accCasualties) {\n      this.accIncidents = accIncidents;\n      this.accCasualties = accCasualties;\n      $rootScope.$broadcast('updatePanelStat');\n    };\n\n    sharedService.sendMarkerStatusUpdateRequest = function(status) {\n      this.markerDisplay = status;\n      $rootScope.$broadcast('toggleMarkerStatusUpdate');\n    };\n\n    sharedService.sendShapeStatusUpdateRequest = function(status) {\n      this.shapeDisplay = status;\n      $rootScope.$broadcast('toggleShapeStatusUpdate');\n    };\n\n    sharedService.sendHeatmapStatusUpdateRequest = function(status) {\n      this.heatmapDisplay = status;\n      $rootScope.$broadcast('toggleHeatmapStatusUpdate');\n    };\n\n    sharedService.sendToggleLoadScreenRequest = function(status) {\n      $rootScope.$broadcast('toggleLoadScreen');\n    };\n\n    sharedService.sendRenderRangeRequest = function(startRange, endRange) {\n      var startDay = startRange.getDate();\n      var startMonth = startRange.getMonth() + 1;\n      var startYear = startRange.getFullYear();\n      var endDay = endRange.getDate();\n      var endMonth = endRange.getMonth() + 1;\n      var endYear = endRange.getFullYear();\n      sharedService.requestURL = this.domain + '/api/v2/ntsb/incidents/list/listrange?startyear=' + startYear + '&startmonth=' + startMonth + '&startday=' + startDay + '&endyear=' + endYear + '&endmonth=' + endMonth + '&endday=' + endDay;\n      $rootScope.$broadcast('render');\n      //sharedService.requestURL =\n    };\n\n    sharedService.sendRenderDateRequest = function(date) {\n      var day = date.getDate();\n      var month = date.getMonth() + 1;\n      var year = date.getFullYear();\n      sharedService.requestURL = this.domain + '/api/v2/ntsb/incidents/list/listrange?startyear=' + year + '&startmonth=' + month + '&startday=' + day;\n      $rootScope.$broadcast('render');\n    };\n\n    sharedService.sendRenderYearRequest = function(year) {\n      sharedService.requestURL = this.domain + '/api/v2/ntsb/incidents/list/listrange?startyear=' + year + '&startmonth=' + '01' + '&startday=' + '01' + '&endyear=' + year + '&endmonth=' + '12' + '&endday=' + '31';\n      $rootScope.$broadcast('render');\n    };\n\n    sharedService.sendRenderMonthRequest = function(year, month) {\n      var isLeap = (year % 4 == 0);\n      var daysInMonth = 31 - ((month == 2) ? (isLeap ? 2 : 3) : ((month - 1) % 7 % 2));\n      sharedService.requestURL = this.domain + '/api/v2/ntsb/incidents/list/listrange?startyear=' + year + '&startmonth=' + month + '&startday=' + '01' + '&endyear=' + year + '&endmonth=' + month + '&endday=' + daysInMonth;\n      $rootScope.$broadcast('render');\n    };\n\n    return sharedService;\n  });\n\n\n})();\n\n(function() {\n  'use strict';\n\n  var main = angular\n    .module('webapp')\n    .controller('MainController', MainController);\n  main.$inject = ['$scope', 'mySharedService'];\n\n  /** @ngInject */\n  function MainController(NgMap, $scope, $http, mySharedService, $log) {\n\n    var vm = this;\n    var aeroData = [];\n    var heatMapLayer = null;\n    var aeroIncidentArray = [];\n    vm.firstRun = true;\n    vm.incidentsMark = {};\n    vm.loadingstatus = true;\n    vm.accumulatedIncidents = 0;\n    vm.accumulatedCasualties = 0;\n    vm.markerStatus = false;\n    vm.shapeStatus = false;\n\n    /* self-defined function */\n    vm.getRadius = function(num) {\n      return Math.pow(num, 4);\n    };\n\n    vm.showDetail = function(e, incident) {\n      vm.incident = incident;\n      vm.map.showInfoWindow('incident-infoWindow', incident.event_identifier);\n    };\n\n    vm.getIcon = 'assets/images/app/exactmark.png';\n    // vm.getIcon = function(x) {\n    //     var icon = null;\n    //     if (x == 'real') {\n    //         icon = {\n    //             scaledSize: new google.maps.Size(16, 39),\n    //             anchor: new google.maps.Point(8, 38),\n    //             url: 'assets/images/app/exactmark.png'\n    //         }\n    //     } else if (x == 'estimated') {\n    //         icon = {\n    //             scaledSize: new google.maps.Size(16, 39),\n    //             anchor: new google.maps.Point(8, 38),\n    //             url: 'assets/images/app/approxmark.png'\n    //         }\n    //     }\n    //     console.log(icon);\n    //     return icon;\n    // };\n\n    vm.isLoading = mySharedService.loading;\n\n    /* event handler */\n    $scope.isLoading = function() {\n      return $http.pendingRequests.length > 0;\n    };\n\n    $scope.$watch($scope.isLoading, function(v) {\n      if (v) {\n        vm.isLoading = true;\n      } else {\n        vm.isLoading = false;\n      }\n    });\n\n\n    $scope.$on('recenter', function() {\n      var location = mySharedService.location;\n      vm.map.panTo(location);\n      vm.map.setZoom(6);\n    });\n\n    $scope.$on('toggleMarkerStatusUpdate', function() {\n      vm.markerStatus = mySharedService.markerDisplay;\n      // for (var key in vm.map.markers) {\n      //   vm.map.markers[key].setMap(null);\n      // }\n    });\n\n    $scope.$on('toggleHeatmapStatusUpdate', function() {\n      if (mySharedService.heatmapDisplay) {\n        heatMapLayer.setMap(vm.map);\n      } else {\n        heatMapLayer.setMap(null);\n      }\n    });\n\n    $scope.$on('toggleShapeStatusUpdate', function() {\n      vm.shapeStatus = mySharedService.shapeDisplay;\n    });\n\n    $scope.$on('render', function() {\n      vm.url = mySharedService.requestURL;\n\n      if (!vm.firstRun) {\n        //reset start here\n        aeroData = [];\n        heatMapLayer.setData([]);\n        heatMapLayer.setMap(vm.map);\n        vm.incidentsMark = {};\n        vm.accumulatedIncidents = 0;\n        vm.accumulatedCasualties = 0;\n        $log.log('reset done.');\n      }\n\n      var resp = $http.get(vm.url)\n        .then(function(result) {\n          return result.data;\n        });\n\n      Promise.resolve(resp).then(function(data) {\n        for (var i = 0; i < data.length; i++) {\n          var lat = data[i][\"lat\"];\n          var lon = data[i][\"lon\"];\n          var idx = data[i][\"inj_count\"];\n          var eventid = data[i][\"ev_id\"];\n          var date = data[i][\"ev_date\"];\n          var approxLocation = data[i][\"approx_loc\"];\n          if (idx === 0)\n            continue;\n\n          vm.incidentsMark[eventid] = {\n            \"event_identifier\": eventid,\n            \"event_date\": date.substr(0, date.indexOf('T')),\n            \"population\": idx,\n            \"approx_loc\": (approxLocation == '0') ? 'real' : 'estimated',\n            \"position\": [lat, lon]\n          };\n\n          vm.accumulatedIncidents++;\n          vm.accumulatedCasualties += idx;\n\n          aeroData.push({\n            location: new google.maps.LatLng(lat, lon),\n            weight: idx\n          });\n        }\n      }).then(function() {\n\n        $log.log('successfully hitting API and resolved promise to various data structures');\n        mySharedService.sendPanelStateUpdateRequest(vm.accumulatedIncidents, vm.accumulatedCasualties);\n        aeroIncidentArray = new google.maps.MVCArray(aeroData);\n\n        heatMapLayer = new google.maps.visualization.HeatmapLayer({\n          data: aeroIncidentArray,\n          radius: 60\n        });\n        $scope.$apply(function() {\n          NgMap.getMap({\n            id: 'aeromap'\n          }).then(function(map) {\n            vm.map = map;\n            map.setOptions({\n              minZoom: 3\n            });\n            heatMapLayer.setMap((mySharedService.heatmapDisplay === null || mySharedService.heatmapDisplay === true) ? map : null);\n            var gradient = [\n              'rgba(251, 255, 31, 0)',\n              'rgba(251, 255, 31, 0.3)',\n              'rgba(245, 235, 28, 0.5)',\n              'rgba(239, 216, 26, 0.7)',\n              'rgba(234, 197, 23, 0.8)',\n              'rgba(228, 177, 21, 0.9)',\n              'rgba(223, 158, 19, 0.95)',\n              'rgba(217, 139, 16, 1)',\n              'rgba(212, 119, 14, 1)',\n              'rgba(206, 100, 11, 1)',\n              'rgba(201, 81, 9, 1)',\n              'rgba(195, 61, 7, 1)',\n              'rgba(190, 42, 4, 1)',\n              'rgba(184, 23, 2, 1)'\n            ]\n            heatMapLayer.set('gradient', heatMapLayer.get('gradient') ? null : gradient);\n          });\n        });\n      });\n      vm.firstRun = false;\n    });\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('webapp')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log) {\n\n    $log.debug('runBlock end');\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('webapp')\n    .config(routeConfig);\n\n  function routeConfig($routeProvider) {\n    $routeProvider\n      .when('/', {\n        templateUrl: 'app/main/main.html'\n      })\n      .otherwise({\n        redirectTo: '/'\n      });\n  }\n\n})();\n\n/* global malarkey:false, moment:false */\n(function() {\n  'use strict';\n\n  angular\n    .module('webapp')\n    .constant('malarkey', malarkey)\n    .constant('moment', moment);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('webapp')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, toastrConfig) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // Set options third-party lib\n    toastrConfig.allowHtml = true;\n    toastrConfig.timeOut = 3000;\n    toastrConfig.positionClass = 'toast-top-right';\n    toastrConfig.preventDuplicates = true;\n    toastrConfig.progressBar = true;\n  }\n\n})();\n\nangular.module(\"webapp\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/main/main.html\",\"<div class=\\\"container\\\"><div><navbar></navbar></div><div><pref></pref></div><div class=\\\"screen-wrapper\\\" ng-controller=\\\"MainController as vm\\\" id=\\\"map-wrapper\\\"><div><div class=\\\"loading-wrapper\\\" ng-show=\\\"vm.isLoading\\\"><div class=\\\"frame\\\"><div class=\\\"plane-container\\\"><svg version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" width=\\\"1131.53px\\\" height=\\\"379.304px\\\" viewbox=\\\"0 0 1131.53 379.304\\\" enable-background=\\\"new 0 0 1131.53 379.304\\\" xml:space=\\\"preserve\\\" class=\\\"plane\\\"><polygon fill=\\\"#D8D8D8\\\" points=\\\"72.008,0 274.113,140.173 274.113,301.804 390.796,221.102 601.682,367.302 1131.53,0.223\\\"></polygon><polygon fill=\\\"#C4C4C3\\\" points=\\\"1131.53,0.223 274.113,140.173 274.113,301.804 390.796,221.102\\\"></polygon></svg></div></div><div class=\\\"clouds\\\"><svg version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" width=\\\"762px\\\" height=\\\"331px\\\" viewbox=\\\"0 0 762 331\\\" enable-background=\\\"new 0 0 762 331\\\" xml:space=\\\"preserve\\\" class=\\\"cloud big front slowest\\\"><path fill=\\\"#FFFFFF\\\" d=\\\"M715.394,228h-16.595c0.79-5.219,1.201-10.562,1.201-16c0-58.542-47.458-106-106-106 c-8.198,0-16.178,0.932-23.841,2.693C548.279,45.434,488.199,0,417.5,0c-84.827,0-154.374,65.401-160.98,148.529 C245.15,143.684,232.639,141,219.5,141c-49.667,0-90.381,38.315-94.204,87H46.607C20.866,228,0,251.058,0,279.5 S20.866,331,46.607,331h668.787C741.133,331,762,307.942,762,279.5S741.133,228,715.394,228z\\\"></path></svg><svg version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" width=\\\"762px\\\" height=\\\"331px\\\" viewbox=\\\"0 0 762 331\\\" enable-background=\\\"new 0 0 762 331\\\" xml:space=\\\"preserve\\\" class=\\\"cloud distant smaller\\\"><path fill=\\\"#FFFFFF\\\" d=\\\"M715.394,228h-16.595c0.79-5.219,1.201-10.562,1.201-16c0-58.542-47.458-106-106-106 c-8.198,0-16.178,0.932-23.841,2.693C548.279,45.434,488.199,0,417.5,0c-84.827,0-154.374,65.401-160.98,148.529 C245.15,143.684,232.639,141,219.5,141c-49.667,0-90.381,38.315-94.204,87H46.607C20.866,228,0,251.058,0,279.5 S20.866,331,46.607,331h668.787C741.133,331,762,307.942,762,279.5S741.133,228,715.394,228z\\\"></path></svg><svg version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" width=\\\"762px\\\" height=\\\"331px\\\" viewbox=\\\"0 0 762 331\\\" enable-background=\\\"new 0 0 762 331\\\" xml:space=\\\"preserve\\\" class=\\\"cloud small slow\\\"><path fill=\\\"#FFFFFF\\\" d=\\\"M715.394,228h-16.595c0.79-5.219,1.201-10.562,1.201-16c0-58.542-47.458-106-106-106 c-8.198,0-16.178,0.932-23.841,2.693C548.279,45.434,488.199,0,417.5,0c-84.827,0-154.374,65.401-160.98,148.529 C245.15,143.684,232.639,141,219.5,141c-49.667,0-90.381,38.315-94.204,87H46.607C20.866,228,0,251.058,0,279.5 S20.866,331,46.607,331h668.787C741.133,331,762,307.942,762,279.5S741.133,228,715.394,228z\\\"></path></svg><svg version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" width=\\\"762px\\\" height=\\\"331px\\\" viewbox=\\\"0 0 762 331\\\" enable-background=\\\"new 0 0 762 331\\\" xml:space=\\\"preserve\\\" class=\\\"cloud distant super-slow massive\\\"><path fill=\\\"#FFFFFF\\\" d=\\\"M715.394,228h-16.595c0.79-5.219,1.201-10.562,1.201-16c0-58.542-47.458-106-106-106 c-8.198,0-16.178,0.932-23.841,2.693C548.279,45.434,488.199,0,417.5,0c-84.827,0-154.374,65.401-160.98,148.529 C245.15,143.684,232.639,141,219.5,141c-49.667,0-90.381,38.315-94.204,87H46.607C20.866,228,0,251.058,0,279.5 S20.866,331,46.607,331h668.787C741.133,331,762,307.942,762,279.5S741.133,228,715.394,228z\\\"></path></svg><svg version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" width=\\\"762px\\\" height=\\\"331px\\\" viewbox=\\\"0 0 762 331\\\" enable-background=\\\"new 0 0 762 331\\\" xml:space=\\\"preserve\\\" class=\\\"cloud slower\\\"><path fill=\\\"#FFFFFF\\\" d=\\\"M715.394,228h-16.595c0.79-5.219,1.201-10.562,1.201-16c0-58.542-47.458-106-106-106 c-8.198,0-16.178,0.932-23.841,2.693C548.279,45.434,488.199,0,417.5,0c-84.827,0-154.374,65.401-160.98,148.529 C245.15,143.684,232.639,141,219.5,141c-49.667,0-90.381,38.315-94.204,87H46.607C20.866,228,0,251.058,0,279.5 S20.866,331,46.607,331h668.787C741.133,331,762,307.942,762,279.5S741.133,228,715.394,228z\\\"></path></svg><p class=\\\"loadingtext\\\">Preparing data...</p></div></div></div><ng-map id=\\\"aeromap\\\" zoom=\\\"4\\\" center=\\\"37.774546, -122.433523\\\" styles=\\\"[{\\'featureType\\':\\'administrative.country\\',\\'elementType\\':\\'geometry\\', \\'stylers\\':[{\\'visibility\\':\\'on\\'}]},{\\'featureType\\':\\'administrative.country\\',\\'elementType\\':\\'geometry.stroke\\',\\'stylers\\':[{\\'visibility\\':\\'on\\'}, {\\'weight\\':\\'0.22\\'}]},{\\'featureType\\':\\'poi\\',\\'elementType\\':\\'all\\',\\'stylers\\':[{\\'visibility\\':\\'simplified\\'}]},{\\'featureType\\':\\'road\\',\\'elementType\\':\\'labels\\', \\'stylers\\':[{\\'visibility\\':\\'simplified\\'}]},{\\'featureType\\':\\'water\\',\\'elementType\\':\\'all\\',\\'stylers\\':[{\\'visibility\\':\\'simplified\\'}]},{\\'featureType\\':\\'transit\\', \\'elementType\\':\\'all\\',\\'stylers\\':[{\\'visibility\\':\\'simplified\\'}]},{\\'featureType\\':\\'landscape\\',\\'elementType\\':\\'all\\',\\'stylers\\':[{\\'visibility\\':\\'simplified\\'}]}, {\\'featureType\\':\\'road.highway\\',\\'elementType\\':\\'all\\',\\'stylers\\':[{\\'visibility\\':\\'off\\'}]},{\\'featureType\\':\\'road.local\\',\\'elementType\\':\\'all\\', \\'stylers\\':[{\\'visibility\\':\\'on\\'}]},{\\'featureType\\':\\'road.highway\\',\\'elementType\\':\\'geometry\\',\\'stylers\\':[{\\'visibility\\':\\'on\\'}]},{\\'featureType\\':\\'water\\', \\'elementType\\':\\'all\\',\\'stylers\\':[{\\'color\\':\\'#84afa3\\'},{\\'lightness\\':52}]},{\\'featureType\\':\\'all\\',\\'elementType\\':\\'all\\',\\'stylers\\':[{\\'saturation\\':-17}, {\\'gamma\\':0.36}]},{\\'featureType\\':\\'transit.line\\',\\'elementType\\':\\'geometry\\',\\'stylers\\':[{\\'color\\':\\'#3f518c\\'}]}]\\\" disable-default-u-i=\\\"true\\\"><div class=\\\"incident-impact\\\"><shape name=\\\"circle\\\" ng-repeat=\\\"incidentMark in vm.incidentsMark\\\" visible=\\\"{{vm.shapeStatus}}\\\" stroke-color=\\\"#ff0000\\\" stroke-opacity=\\\"0.3\\\" stroke-weight=\\\"2\\\" fill-color=\\\"#ff0000\\\" fill-opacity=\\\"0.05\\\" center=\\\"{{incidentMark.position}}\\\" radius=\\\"{{vm.getRadius(incidentMark.population)}}\\\"></shape></div><div class=\\\"incident-point\\\"><marker id=\\\"{{incidentMark.event_identifier}}\\\" visible=\\\"{{vm.markerStatus}}\\\" position=\\\"{{incidentMark.position}}\\\" ng-repeat=\\\"incidentMark in vm.incidentsMark\\\" icon=\\\"{scaledSize: new google.maps.Size(16, 39), anchor: new google.maps.Point(8, 38), url: {{vm.getIcon}} }\\\" on-click=\\\"vm.showDetail(incidentMark)\\\"></marker><info-window id=\\\"incident-infoWindow\\\"><div ng-non-bindable=\\\"\\\"><p><span class=\\\"infoWindow-header\\\">INCIDENT SUMMARY</span></p><div class=\\\"row\\\"><div class=\\\"col-md-4\\\"><p><span class=\\\"infoWindow-subheader\\\">CASUALTIES</span></p><p><span class=\\\"infoWindow-subheader-content\\\">{{vm.incident.population}}</span></p></div><div class=\\\"col-md-8\\\"><p><span class=\\\"infoWindow-subheader\\\">INCIDENT DATE</span></p><p><span class=\\\"infoWindow-subheader-content\\\">{{vm.incident.event_date}}</span></p></div></div>This marker represents <strong>{{vm.incident.approx_loc}}</strong> coordinate point.</div></info-window></div></ng-map></div></div>\");\n$templateCache.put(\"app/components/gmap/gmap.html\",\"<div class=\\\"screen-wrapper\\\" id=\\\"map-wrapper\\\"><div map-lazy-load=\\\"https://maps.google.com/maps/api/js\\\"><ng-map center=\\\"37.782551, -122.445368\\\" zoom=\\\"3\\\" minzoom=\\\"2\\\" styles=\\\"[{\\'featureType\\':\\'administrative.country\\',\\'elementType\\':\\'geometry\\', \\'stylers\\':[{\\'visibility\\':\\'on\\'}]},{\\'featureType\\':\\'administrative.country\\',\\'elementType\\':\\'geometry.stroke\\',\\'stylers\\':[{\\'visibility\\':\\'on\\'}, {\\'weight\\':\\'0.22\\'}]},{\\'featureType\\':\\'poi\\',\\'elementType\\':\\'all\\',\\'stylers\\':[{\\'visibility\\':\\'simplified\\'}]},{\\'featureType\\':\\'road\\',\\'elementType\\':\\'labels\\', \\'stylers\\':[{\\'visibility\\':\\'simplified\\'}]},{\\'featureType\\':\\'water\\',\\'elementType\\':\\'all\\',\\'stylers\\':[{\\'visibility\\':\\'simplified\\'}]},{\\'featureType\\':\\'transit\\', \\'elementType\\':\\'all\\',\\'stylers\\':[{\\'visibility\\':\\'simplified\\'}]},{\\'featureType\\':\\'landscape\\',\\'elementType\\':\\'all\\',\\'stylers\\':[{\\'visibility\\':\\'simplified\\'}]}, {\\'featureType\\':\\'road.highway\\',\\'elementType\\':\\'all\\',\\'stylers\\':[{\\'visibility\\':\\'off\\'}]},{\\'featureType\\':\\'road.local\\',\\'elementType\\':\\'all\\', \\'stylers\\':[{\\'visibility\\':\\'on\\'}]},{\\'featureType\\':\\'road.highway\\',\\'elementType\\':\\'geometry\\',\\'stylers\\':[{\\'visibility\\':\\'on\\'}]},{\\'featureType\\':\\'water\\', \\'elementType\\':\\'all\\',\\'stylers\\':[{\\'color\\':\\'#84afa3\\'},{\\'lightness\\':52}]},{\\'featureType\\':\\'all\\',\\'elementType\\':\\'all\\',\\'stylers\\':[{\\'saturation\\':-17}, {\\'gamma\\':0.36}]},{\\'featureType\\':\\'transit.line\\',\\'elementType\\':\\'geometry\\',\\'stylers\\':[{\\'color\\':\\'#3f518c\\'}]}]\\\" disable-default-u-i=\\\"true\\\"><heatmap-layer id=\\\"foo\\\" data=\\\"taxiData\\\"></heatmap-layer></ng-map></div></div><script src=\\\"https://rawgit.com/allenhwkim/angularjs-google-maps/master/testapp/taxi-data.js\\\"></script>\");\n$templateCache.put(\"app/components/navbar/navbar.html\",\"<nav class=\\\"navbar navbar-default navbar-fixed-top\\\"><div class=\\\"container-fluid\\\"><div class=\\\"navbar-header\\\"><a class=\\\"navbar-brand\\\"><img ng-src=\\\"assets/images/app/aerosafe.png\\\"><span class=\\\"product-name\\\">Aerosafe<sup>alpha</sup></span></a></div></div></nav>\");\n$templateCache.put(\"app/components/preferencepanel/preferencepanel.html\",\"<div class=\\\"pref-toggle\\\" ng-click=\\\"vm.collapse()\\\"><span class=\\\"glyphicon {{vm.toggleIcon}}\\\" aria-hidden=\\\"true\\\"></span></div><div id=\\\"panel\\\" ng-init=\\\"vm.init()\\\"><div class=\\\"row\\\"><div class=\\\"col-md-2\\\"><span class=\\\"control-header\\\">Summary</span> <span class=\\\"control-content\\\"><p><span class=\\\"count\\\">{{vm.incidentsCount}}</span> INCIDENTS</p><p><span class=\\\"count\\\">{{vm.casualtiesCount}}</span> CASUALTIES</p></span></div><div class=\\\"col-md-4\\\"><span class=\\\"control-header\\\">Location Search</span><div class=\\\"form-group\\\"><input places-auto-complete=\\\"\\\" placeholder=\\\"Enter a location\\\" ng-model=\\\"vm.address\\\" on-place-changed=\\\"vm.placeChanged()\\\"></div></div><div class=\\\"col-md-6\\\"><span class=\\\"control-header\\\">visualization preferences</span> <span class=\\\"control-content\\\"><div class=\\\"row\\\"><div class=\\\"col-md-6\\\"><span class=\\\"control-content\\\"><div class=\\\"row\\\"><div class=\\\"col-md-5\\\"><p><label style=\\\"line-height: 2.2em;\\\">View by</label></p></div><div class=\\\"col-md-7\\\"><div class=\\\"dropdown dropdown-dark\\\"><select ng-model=\\\"vm.modeId\\\" ng-init=\\\"vm.modeId=\\'1\\'\\\" ng-options=\\\"mode.id as mode.name for mode in vm.viewModes\\\" class=\\\"dropdown-select\\\"></select></div></div></div><hr><p><label>Display Heatmap</label><switch id=\\\"enabled\\\" name=\\\"enabled\\\" ng-model=\\\"vm.showHeatmap\\\" ng-init=\\\"vm.showHeatmap=true\\\" ng-change=\\\"vm.changeHeatmapStatus(vm.showHeatmap)\\\" class=\\\"green\\\"></switch></p><p><label>Display Marker</label><switch id=\\\"enabled\\\" name=\\\"enabled\\\" ng-model=\\\"vm.showMarker\\\" ng-init=\\\"vm.showMarker=false\\\" ng-change=\\\"vm.changeMarkerStatus(vm.showMarker)\\\" class=\\\"green\\\"></switch></p><p><label>Display Impact Circle</label><switch id=\\\"enabled\\\" name=\\\"enabled\\\" ng-model=\\\"vm.showShape\\\" ng-init=\\\"vm.showShape=false\\\" ng-change=\\\"vm.changeShapeStatus(vm.showShape)\\\" class=\\\"green\\\"></switch></p></span></div><div class=\\\"col-md-5\\\"><span class=\\\"control-content\\\" id=\\\"year-filter\\\" ng-if=\\\"vm.isYearModeEnabled\\\"><p><label class=\\\"special-header\\\">Filter Criteria</label></p><p class=\\\"wrapper\\\"><label class=\\\"special-label\\\">Specify year below</label><caution class=\\\"special-label\\\">{{vm.invalidYearMessage}}</caution><input ng-model=\\\"vm.selectedyear\\\" ng-init=\\\"vm.selectedyear=2015\\\" type=\\\"number\\\" name=\\\"quantity\\\" min=\\\"1960\\\" max=\\\"2015\\\"></p></span> <span class=\\\"control-content month-content\\\" ng-if=\\\"vm.isMonthModeEnabled\\\"><p><label class=\\\"special-header\\\">Filter Criteria</label></p><p class=\\\"wrapper\\\"><label class=\\\"special-label\\\">Specify period below</label><caution class=\\\"special-label\\\">{{vm.invalidYearMessage}}</caution><caution class=\\\"special-label\\\">{{vm.invalidMonthMessage}}</caution><input ng-model=\\\"vm.selectedyear\\\" class=\\\"multiple-selector\\\" ng-init=\\\"vm.selectedyear=2015\\\" type=\\\"number\\\" name=\\\"quantity\\\" min=\\\"1960\\\" max=\\\"2015\\\"> <input ng-model=\\\"vm.selectedmonth\\\" class=\\\"multiple-selector\\\" ng-init=\\\"vm.selectedmonth=1\\\" type=\\\"number\\\" name=\\\"quantity\\\" min=\\\"1\\\" max=\\\"12\\\"></p></span> <span class=\\\"control-content range-content\\\" ng-if=\\\"vm.isRangeModeEnabled\\\"><p><label class=\\\"special-header\\\">Filter Criteria</label></p><p class=\\\"wrapper clearfix\\\"><label class=\\\"special-label\\\">Specify range below</label> <label class=\\\"special-label\\\">FROM</label><caution class=\\\"special-label\\\">{{vm.invalidSDMessage}}</caution><datepicker date-format=\\\"MMMM dd, yyyy\\\" date-max-limit=\\\"{{vm.dateMaxLimit}}\\\"><input ng-model=\\\"vm.selectedstartdate\\\" class=\\\"date-selector\\\" ng-change=\\\"vm.updateEDMaxLimit()\\\" type=\\\"text\\\" readonly=\\\"true\\\"></datepicker><label class=\\\"special-label\\\">TO</label><caution class=\\\"special-label\\\">{{vm.invalidEDMessage}}</caution><datepicker date-format=\\\"MMMM dd, yyyy\\\" date-set=\\\"{{vm.selectedstartdate}}\\\" date-max-limit=\\\"{{vm.enddateMaxLimit}}\\\"><input ng-model=\\\"vm.selectedenddate\\\" class=\\\"date-selector\\\" type=\\\"text\\\" readonly=\\\"true\\\"></datepicker></p></span> <span class=\\\"control-content\\\" id=\\\"date-content\\\" ng-if=\\\"vm.isDateModeEnabled\\\"><p><label class=\\\"special-header\\\">Filter Criteria</label></p><p class=\\\"wrapper clearfix\\\"><label class=\\\"special-label\\\">Specify date below</label><caution class=\\\"special-label\\\">{{vm.invalidDateMessage}}</caution><datepicker date-format=\\\"MMMM dd, yyyy\\\" date-max-limit=\\\"{{vm.dateMaxLimit}}\\\"><input ng-model=\\\"vm.selecteddate\\\" class=\\\"date-selector\\\" type=\\\"text\\\" readonly=\\\"true\\\"></datepicker></p></span></div><div class=\\\"col-md-1\\\"><span class=\\\"control-content text-align\\\"><button type=\\\"button\\\" class=\\\"btn btn-xs btn-primary\\\" ng-click=\\\"vm.applyRender()\\\">Apply <span class=\\\"glyphicon glyphicon-ok\\\"></span></button></span></div></div></span></div></div><div class=\\\"row version-info text-center\\\">AEROSAFE alpha</div></div>\");}]);"],"sourceRoot":"/source/"}